diff --git a/Modules/expat/loadlibrary.c b/Modules/expat/loadlibrary.c
index 452ae92..20dd784 100644
--- a/Modules/expat/loadlibrary.c
+++ b/Modules/expat/loadlibrary.c
@@ -33,6 +33,8 @@
 #if defined(_WIN32)
 
 #include <windows.h>
+#endif
+#if defined(_WIN32) && (!defined(WINAPI_FAMILY_PARTITION) || WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP | WINAPI_PARTITION_SYSTEM))
 #include <tchar.h>
 
 
diff --git a/Modules/expat/xmlparse.c b/Modules/expat/xmlparse.c
index 0df6883..3589c9e 100644
--- a/Modules/expat/xmlparse.c
+++ b/Modules/expat/xmlparse.c
@@ -865,6 +865,7 @@ writeRandomBytes_arc4random(void * target, size_t count) {
 
 #ifdef _WIN32
 
+#if !defined(WINAPI_FAMILY) || WINAPI_FAMILY != WINAPI_FAMILY_APP
 typedef BOOLEAN (APIENTRY *RTLGENRANDOM_FUNC)(PVOID, ULONG);
 HMODULE _Expat_LoadLibrary(LPCTSTR filename);  /* see loadlibrary.c */
 
@@ -892,6 +893,26 @@ writeRandomBytes_RtlGenRandom(void * target, size_t count) {
 
   return success;
 }
+#else
+#include <bcrypt.h>
+
+/* Obtain entropy on Windows 10 UWP */
+static int
+writeRandomBytes_RtlGenRandom(void * target, size_t count) {
+  int success = 0;
+
+  NTSTATUS bcrypt;
+  BCRYPT_ALG_HANDLE cryptprovider = NULL;
+  bcrypt = BCryptOpenAlgorithmProvider(&cryptprovider, BCRYPT_RNG_ALGORITHM, NULL, 0);
+  if (BCRYPT_SUCCESS(bcrypt)) {
+    bcrypt = BCryptGenRandom(cryptprovider, target, (ULONG)count, 0);
+    success = BCRYPT_SUCCESS(bcrypt) ? 1 : 0;
+    BCryptCloseAlgorithmProvider(cryptprovider, 0);
+  }
+
+  return success;
+}
+#endif
 
 #endif /* _WIN32 */
 
@@ -927,6 +948,7 @@ gather_time_entropy(void)
 
 static unsigned long
 ENTROPY_DEBUG(const char * label, unsigned long entropy) {
+#if !defined(_WIN32) || !defined(WINAPI_FAMILY_PARTITION) || WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP | WINAPI_PARTITION_SYSTEM)
   const char * const EXPAT_ENTROPY_DEBUG = getenv("EXPAT_ENTROPY_DEBUG");
   if (EXPAT_ENTROPY_DEBUG && ! strcmp(EXPAT_ENTROPY_DEBUG, "1")) {
     fprintf(stderr, "Entropy: %s --> 0x%0*lx (%lu bytes)\n",
@@ -934,6 +956,7 @@ ENTROPY_DEBUG(const char * label, unsigned long entropy) {
         (int)sizeof(entropy) * 2, entropy,
         (unsigned long)sizeof(entropy));
   }
+#endif
   return entropy;
 }
 
diff --git a/cmake/extensions/CMakeLists.txt b/cmake/extensions/CMakeLists.txt
index 67b4541..dc68894 100644
--- a/cmake/extensions/CMakeLists.txt
+++ b/cmake/extensions/CMakeLists.txt
@@ -483,16 +483,22 @@ if(EXPAT_LIBRARIES AND EXPAT_INCLUDE_DIRS)
     )
 else()
     set(_pyexpat_definitions XML_STATIC)
+    set(_pyexpat_SOURCES
+        pyexpat.c
+        expat/xmlparse.c
+        expat/xmlrole.c
+        expat/xmltok.c
+        )
     if(UNIX)
         list(APPEND _pyexpat_definitions HAVE_EXPAT_CONFIG_H)
     elseif(WIN32)
         list(APPEND _pyexpat_definitions COMPILED_FROM_DSP)
+        if(EXISTS "${SRC_DIR}/Modules/expat/loadlibrary.c")
+            list(APPEND _pyexpat_SOURCES "${SRC_DIR}/Modules/expat/loadlibrary.c")
+        endif()
     endif()
     add_python_extension(pyexpat
-        SOURCES pyexpat.c
-                expat/xmlparse.c
-                expat/xmlrole.c
-                expat/xmltok.c
+        SOURCES ${_pyexpat_SOURCES}
         DEFINITIONS ${_pyexpat_definitions}
         INCLUDEDIRS ${SRC_DIR}/Modules/expat
     )
-- 
2.16.1.windows.4

